BeamSearch instead of EHC?

Restarts:
    - Once a local search fails, keep a count the number of steps
    upon restart, randomly select states - using "complete" randomness or use something like
    roulette selection to choose states.
    Once randomly selection count = steps, continue using EHC standard algorithm
    - Heuristic Random Restart

Successor Selector Ideas:
    - Look Ahead
        - The selector will look at the successors and look a few steps a head of time to see if any of their following
        successors will improve overall.
        - Helpfulfilter can be used along with it to prune some successors that are not applicable

Multi Start Local Search (TO DO):
    - Create instances of different search strategies and run them in parallel in order to find a solution
    - All instances share a single closed list, but with their own open list.
    - If an instance starts to stagnate or reached a local optimum, meta-heuristic should be applied to diversify
    the search to somewhere else.
    - In order to keep closed list "safe", each instance should store a small amount of closed state in its own memory, then
    - when necessary, each instance should be scheduled to have the chance those locally stored closed state into the globally stored state
    - As multiple instances may return different plans, the best one should be selected.
    - Portfolio Optimization

Simulated Annealing Search (Implemented) - Restart is good, only when its not too frequent
    - Generate initial solution using EHCS (although i do plan on using something else)
        - Neighbour generation is based on successors, and closed states (second chance) but only
        the current state gives zero successors, however this will require some experimentation
        - Neighbour selection uses a weak form of Roulette Selection
        - Base Temperature = 1
        - Terminating Temperature = 0.001
        - Alpha = 0.7
        - Iteration per Cool Down = 40
    - Current Perform is significantly better than EHCS, which is expected, unless implementation is wrong.
    - Needs tweaking on parameters to aim for improvements
    - Neighbour selection and generation needs some tweaking.
    - Generated Plan needs to be Validated
    - Simulated Annealing was designed for obtaining optimal solution however we want to get to a solution as fast as possible,
    one way is to use EHC to search, with random rate to restart, once it restarts, simulated annealing will jump and select a different state
        - Set random restart rate = episilon
        - Run EHC - until restart, plan found or failed
        - Either case:
            - Simulated annealing will randomly select a state to restart EHC on from its closed list
            - reset closed & open list
            - Initial state should always be included in its selection for random restart.
        - Results are better, similar result as EHC

Genetic Algorithm 
    - Encoding of chromosome
        - Use EHC or the like, to first try to find a plan, if a valid plan is found, return it for satisfaction,
        otherwise, the population is selected from the list of closed states.
            - Since each state in a closed state is a valid state obtained from the initial state, we do not need to take into
            consideration about validatity of our initial generation
            - We extract a plan from each of these states - which formulates a chromosome
        - The encoding of a chromosome is then the list of atomic actions from the subplan
    - Fitness
        - is derived from the length of the plan
        - the validity
        - the heuristics


Test algorithm with at least 5 random seeds